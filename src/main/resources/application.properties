# ===============================================================================
# MEDIA SORTING APPLICATION CONFIGURATION
# ===============================================================================

# Main source folder for media processing
app.media-sorting.source-folder=${MEDIA_SOURCE_FOLDER:E:\\Marriage\\Engagement}

# Root directory for all log files
app.media-sorting.root-logs-folder=${ROOT_LOGS_FOLDER:logs}

# ===============================================================================
# FEATURE FLAGS
# ===============================================================================

# Enable creation of device-specific folders during organization
app.media-sorting.enable-device-folder-creation=${ENABLE_DEVICE_FOLDERS:true}

# Enable moving duplicate files to separate folders
app.media-sorting.enable-duplicate-moving=${ENABLE_DUPLICATE_MOVING:true}

# ===============================================================================
# DIRECTORY STRUCTURE CONFIGURATION
# ===============================================================================

# Name of the directory where empty folders are moved
app.media-sorting.directory-structure.empty-folder-directory-name=${EMPTY_FOLDER_DIR_NAME:EmptyFolder}

# Main directory name for organizing images
app.media-sorting.directory-structure.images-directory-name=${IMAGES_DIR_NAME:Images}

# Main directory name for organizing videos
app.media-sorting.directory-structure.videos-directory-name=${VIDEOS_DIR_NAME:Videos}

# Subdirectory name for original (unique) files
app.media-sorting.directory-structure.original-sub-directory-name=${ORIGINAL_SUBDIR_NAME:Original}

# Subdirectory name for duplicate files
app.media-sorting.directory-structure.duplicate-sub-directory-name=${DUPLICATE_SUBDIR_NAME:Duplicate}

# Directory name for non-media files
app.media-sorting.directory-structure.others-directory-name=${OTHERS_DIR_NAME:others}

# ===============================================================================
# LOG FILE PATHS CONFIGURATION
# ===============================================================================

# Log file for image processing errors
app.media-sorting.log-file-paths.image-error-log-path=${IMAGE_ERROR_LOG:logs/po/image/error.txt}

# Log file for video processing errors
app.media-sorting.log-file-paths.video-error-log-path=${VIDEO_ERROR_LOG:logs/po/video/error.txt}

# Log file for general media processing errors
app.media-sorting.log-file-paths.media-error-log-path=${MEDIA_ERROR_LOG:logs/po/media/error.txt}

# Log file for photo organizer errors
app.media-sorting.log-file-paths.photo-organizer-error-log-path=${PHOTO_ORGANIZER_ERROR_LOG:logs/po/error.txt}

# Log file for file comparison operations
app.media-sorting.log-file-paths.file-comparison-log-path=${FILE_COMPARISON_LOG:logs/po/file/compare.txt}

# Log file for empty folder cleanup operations
app.media-sorting.log-file-paths.empty-folder-cleanup-log-path=${EMPTY_FOLDER_CLEANUP_LOG:logs/cleanup/empty-folders.txt}

# Log file for folder comparison progress
app.media-sorting.log-file-paths.folder-comparison-progress-log-path=${FOLDER_COMPARISON_PROGRESS_LOG:logs/compare/progress.txt}

# Log file for MP4 video processing errors
app.media-sorting.log-file-paths.video-mp4-error-log-path=${VIDEO_MP4_ERROR_LOG:logs/po/video/mp4Error.txt}

# Log file for TGP video processing errors  
app.media-sorting.log-file-paths.video-tgp-error-log-path=${VIDEO_TGP_ERROR_LOG:logs/po/video/tgpError.txt}

# Log file for QuickTime video processing errors
app.media-sorting.log-file-paths.video-qt-error-log-path=${VIDEO_QT_ERROR_LOG:logs/po/video/qtError.txt}

# Log file for other video format processing errors
app.media-sorting.log-file-paths.video-other-error-log-path=${VIDEO_OTHER_ERROR_LOG:logs/po/video/otherError.txt}

# ===============================================================================
# SUPPORTED FILE EXTENSIONS CONFIGURATION
# ===============================================================================

# Supported image file extensions (comma-separated, case-insensitive)
app.media-sorting.file-extensions.supported-image-extensions=${SUPPORTED_IMAGE_EXTENSIONS:arw,jpg,jpeg,gif,bmp,ico,tif,tiff,raw,indd,ai,eps,pdf,heic,cr2,nrw,k25,png,webp}

# Supported video file extensions (comma-separated, case-insensitive)  
app.media-sorting.file-extensions.supported-video-extensions=${SUPPORTED_VIDEO_EXTENSIONS:mp4,mkv,flv,avi,mov,wmv,rm,mpg,mpeg,3gp,vob,m4v,3g2,divx,xvid,webm}

# ===============================================================================
# BATCH JOB CONFIGURATION FOR FOLDER COMPARISON
# ===============================================================================

# Primary folder path for batch comparison (typically the source folder)
app.media-sorting.batch-job.primary-folder-path=${BATCH_PRIMARY_FOLDER:E:\\Photos\\Images}

# Secondary folder path for batch comparison (typically the target folder)
app.media-sorting.batch-job.secondary-folder-path=${BATCH_SECONDARY_FOLDER:E:\\Marriage}

# Maximum number of threads for parallel processing during batch comparison
app.media-sorting.batch-job.max-thread-pool-size=${BATCH_MAX_THREADS:20}

# Directory path for storing batch comparison logs
app.media-sorting.batch-job.comparison-logs-directory-path=${BATCH_COMPARISON_LOGS_DIR:logs/compare}

# ===============================================================================
# SPRING BOOT LOGGING CONFIGURATION
# ===============================================================================

# Set logging level for the media sorting application
logging.level.com.media.sort=${APP_LOG_LEVEL:INFO}

# Console logging pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# File logging pattern (when file logging is enabled)
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===============================================================================
# SPRING BOOT APPLICATION SETTINGS
# ===============================================================================

# Application name
spring.application.name=Media Sorting Application

# Server port (for REST API endpoints)
server.port=${SERVER_PORT:8080}

# Enable configuration properties validation
spring.main.allow-bean-definition-overriding=true